package CoreLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.editor.runtime.cells.EmptyCellAction;

public class Facttype_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_rcvleb_a(editorContext, node);
  }
  private EditorCell createCollection_rcvleb_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_rcvleb_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_rcvleb_a0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_rcvleb_b0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_rcvleb_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_rcvleb_d0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_e0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_f0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_rcvleb_g0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_h0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_i0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_j0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_k0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_l0(editorContext, node));
    editorCell.addEditorCell(this.createModelAccess_rcvleb_m0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_rcvleb_n0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_rcvleb_o0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_rcvleb_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "facttype");
    editorCell.setCellId("Constant_rcvleb_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_rcvleb_b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name");
    Style style = new StyleImpl();
    CoreLanguageStyles_StyleSheet.apply_Verb(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createCollection_rcvleb_c0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_rcvleb_c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_rcvleb_a2a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_rcvleb_b2a(editorContext, node));
    editorCell.addEditorCell(this.createRefNodeList_rcvleb_c2a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_rcvleb_d2a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_rcvleb_e2a(editorContext, node));
    editorCell.addEditorCell(this.createRefNodeList_rcvleb_f2a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_rcvleb_a2a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "roles");
    editorCell.setCellId("Constant_rcvleb_a2a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_rcvleb_b2a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_rcvleb_b2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.PUNCTUATION_LEFT, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNodeList_rcvleb_c2a(EditorContext editorContext, SNode node) {
    AbstractCellListHandler handler = new Facttype_Editor.rolesListHandler_rcvleb_c2a(node, "roles", editorContext);
    EditorCell_Collection editorCell = handler.createCells(editorContext, new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_roles");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_CHILDREN_NEWLINE, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class rolesListHandler_rcvleb_c2a extends RefNodeListHandler {
    public rolesListHandler_rcvleb_c2a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }
    public SNode createNodeToInsert(EditorContext editorContext) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, editorContext, super.getElementRole());
    }
    public EditorCell createNodeCell(EditorContext editorContext, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(editorContext, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext);
      return elementCell;
    }
    public EditorCell createEmptyCell(EditorContext editorContext) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(editorContext);
      this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext);
      return emptyCell;
    }
    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext editorContext) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), editorContext));
        }
      }
    }
  }
  private EditorCell createConstant_rcvleb_d2a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "phrases");
    editorCell.setCellId("Constant_rcvleb_d2a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_rcvleb_e2a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ":");
    editorCell.setCellId("Constant_rcvleb_e2a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNodeList_rcvleb_f2a(EditorContext editorContext, SNode node) {
    AbstractCellListHandler handler = new Facttype_Editor.phrasesListHandler_rcvleb_f2a(node, "phrases", editorContext);
    EditorCell_Collection editorCell = handler.createCells(editorContext, new CellLayout_Indent(), false);
    editorCell.setCellId("refNodeList_phrases");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_CHILDREN_NEWLINE, 0, true);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setRole(handler.getElementRole());
    return editorCell;
  }
  private static class phrasesListHandler_rcvleb_f2a extends RefNodeListHandler {
    public phrasesListHandler_rcvleb_f2a(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }
    public SNode createNodeToInsert(EditorContext editorContext) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, editorContext, super.getElementRole());
    }
    public EditorCell createNodeCell(EditorContext editorContext, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(editorContext, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext);
      return elementCell;
    }
    public EditorCell createEmptyCell(EditorContext editorContext) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(editorContext);
      this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext);
      return emptyCell;
    }
    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext editorContext) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        if (elementNode != null) {
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
          elementCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), editorContext));
        }
      }
    }
  }
  private EditorCell createConstant_rcvleb_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_rcvleb_d0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_e0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).count() >= 1) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(0), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(0), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_f0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).count() >= 1) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(0), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(0), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_f0");
    Style style = new StyleImpl();
    CoreLanguageStyles_StyleSheet.apply_Role(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_rcvleb_g0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_name_1");
    Style style = new StyleImpl();
    CoreLanguageStyles_StyleSheet.apply_Verb(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_h0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).count() >= 2) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(1), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(1), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_h0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_i0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).count() >= 2) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(1), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(1), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_i0");
    Style style = new StyleImpl();
    CoreLanguageStyles_StyleSheet.apply_Role(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_j0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).count() >= 3) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(2), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(2), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_j0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_k0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).count() >= 3) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(2), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(2), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_k0");
    Style style = new StyleImpl();
    CoreLanguageStyles_StyleSheet.apply_Role(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_l0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).count() >= 4) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(3), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x11a28b573cc30463L, "phrases"))).getElement(3), MetaAdapterFactory.getProperty(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x11a28b573cc2f879L, 0x11a28b573cc2fcfcL, "phrase"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_l0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createModelAccess_rcvleb_m0(final EditorContext editorContext, final SNode node) {
    ModelAccessor modelAccessor = new ModelAccessor() {
      public String getText() {
        if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).count() >= 4) {
          return SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(3), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
        }
        return "";
      }
      public void setText(String text) {
        SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xff306b76056a4ed1L, 0xb5c4df8d840614d7L, 0x3ed64d29d3f7e05eL, 0x3ed64d29d3f7e429L, "roles"))).getElement(3), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), text);
      }
      public boolean isValidText(String text) {
        return true;
      }
    };
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node);
    editorCell.setAction(CellActionType.DELETE, EmptyCellAction.getInstance());
    editorCell.setAction(CellActionType.BACKSPACE, EmptyCellAction.getInstance());
    editorCell.setCellId("ModelAccess_rcvleb_m0");
    Style style = new StyleImpl();
    CoreLanguageStyles_StyleSheet.apply_Role(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_rcvleb_n0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_rcvleb_n0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_rcvleb_o0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_rcvleb_o0");
    editorCell.setDefaultText("");
    return editorCell;
  }
}
